{"version":3,"sources":["components/addToDo/index.js","components/toDoList/index.js","components/completed/index.js","components/toDoContainer/index.js","App.js","reportWebVitals.js","index.js"],"names":["AddToDo","addlist","list","useState","title","setTitle","className","onSubmit","e","id","preventDefault","length","done","type","placeholder","required","value","onChange","target","ToDo","props","checked","handleChange","CheckboxChange","style","textDecoration","Comp","ToDoContainer","todoList","listdo","localStorage","getItem","JSON","parse","arrangeID","obj","forEach","index","setList","todos","setTods","useEffect","setItem","stringify","handleRemove","newList","filter","newToDo","map","newToDos","handleToDo","newToDoList","remove","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30abde8e.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nfunction AddToDo({ addlist, list }) {\n\n    const [title, setTitle] = useState(\"\");\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        let id;\n\n        if (list.length > 0) {\n            id = list[list.length - 1].id + 1;\n        }\n        else {\n            id = 0;\n        }\n        const newToDo = {\n            id: id,\n            title: title,\n            done: false\n        };\n        addlist(newToDo);\n        setTitle(\"\")\n    }\n    return (\n        <div className=\"formDiv\">\n            <form onSubmit={handleSubmit}>\n               \n                    <input type=\"text\" placeholder=\"Enter Task\" required value={title} onChange={(e) => setTitle(e.target.value)} />\n                    <button type='submit'><span>+</span></button>\n         \n            </form>\n        </div>\n    )\n}\n\nexport default AddToDo\n\n","import React from 'react'\n\nconst ToDo = (props) => {\n\n    const CheckboxChange = () =>{\n        if(props.e.done)\n        return null;\n        props.handleChange(props.e.id)\n    }\n\n    return (\n        <div className=\"list\">\n            <input type=\"checkbox\" checked={props.e.done} onChange={()=>CheckboxChange()}/>\n            <span style={props.e.done?{textDecoration:\"line-through\"}:null}>{props.e.title}</span>\n        </div>\n    )\n}\n\nexport default ToDo\n","import React from 'react'\n\nfunction Comp(props) {\n    return (\n        <div className=\"list\">\n            <input type=\"checkbox\" checked={true} onChange={()=>null}/>\n            <span style={props.e.done?{textDecoration:\"line-through\"}:null}>{props.e.title}</span>\n        </div>\n    )\n}\n\nexport default Comp\n","import React, { useState, useEffect } from 'react'\nimport AddToDo from '../addToDo'\nimport ToDo from '../toDoList'\nimport Comp from '../completed'\n\n\n\nconst ToDoContainer = () => {\n\n    let todoList;\n\n    if (localStorage.getItem(\"todos\") === null) {\n        todoList = [];\n    }\n    else {\n        todoList = JSON.parse(localStorage.getItem(\"todos\"));\n    }\n\n\n    let listdo;\n\n    if (localStorage.getItem(\"list\") === null) {\n        listdo = [];\n    }\n    else {\n        listdo = JSON.parse(localStorage.getItem(\"list\"));\n    }\n\n    //use for local storage\n\n\n\n\n\n    //arranges the index - id of object array\n    const arrangeID = (obj) => {\n\n        obj.forEach((e, index) => {\n            e.id = index + 1;\n        })\n\n    }\n\n    const [list, setList] = useState(listdo);\n    const [todos, setTods] = useState(todoList);\n\n    useEffect(() => {\n        localStorage.setItem('list', JSON.stringify(list));\n    }, [list]);\n\n\n    useEffect(() => {\n        localStorage.setItem('todos', JSON.stringify(todos));\n    }, [todos]);\n\n\n    const handleAddList = (newToDo) => {\n        const newToDoList = [...list, newToDo]\n        arrangeID(newToDoList);\n        setList(newToDoList);\n    }\n\n\n    const handleToDo = (newToDo) => {\n        const newToDos = newToDo.filter((e) => e.done === true);\n        const ToDo = [...todos, newToDos[0]];\n        arrangeID(ToDo);\n        setTods(ToDo);\n    }\n\n\n\n    const handleRemove = (id) => {\n\n        const newList = list.filter((e) =>\n            id !== e.id)\n        setList(newList);\n\n    }\n\n\n    const clearComp = () => {\n        setTods('');\n    }\n\n\n    const handleChange = (id) => {\n        let newToDo = list.map(list => {\n            if (list.id === id) {\n                return { ...list, done: !list.done }\n            }\n            return list;\n        })\n\n        handleToDo(newToDo);\n\n        newToDo = newToDo.filter((e) => {\n            return (e.done !== true);\n        })\n        setList(newToDo);\n\n\n    }\n\n\n\n\n    return (\n        <div className=\"container\">\n            <h4>To Do App</h4>\n\n            <AddToDo addlist={handleAddList} list={list} />\n\n            {list.length > 0 ? list.map((e) => {\n                return <ToDo e={e} remove={handleRemove} key={e.id} handleChange={handleChange} />\n            }) : <p>Add Task's</p>}\n\n\n                <hr className=\"hr\"/>\n\n\n            {todos.length > 0 ? todos.map((e) => {\n                return <Comp e={e} key={e.id} />\n            }) : <p>All Task's Done</p>}\n\n            {todos.length > 0 ? <span className=\"comp\" onClick={() => clearComp()}>Clear Completed</span> : ''}\n\n        </div>\n    )\n}\n\nexport default ToDoContainer\n","import './App.css';\nimport ToDoContainer from './components/toDoContainer';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <ToDoContainer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}